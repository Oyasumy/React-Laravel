version: '3.9'

services:
#---------------------------
# Laravel Application
#--------------------------
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: app
    ports:
      - 5173:5173
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    networks:
      - app-network
      - db-network
    depends_on:
      - db
      - redis
#---------------------------
# Nginx Service
#---------------------------
  webserver:
    image: nginx:alpine
    restart: unless-stopped
    container_name: nginx
    ports:
      - ${DOCKER_APP_PORT}:80
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost || exit 1z
      interval: 30s
      timeout: 10s
      retries: 5
#---------------------------
# Database
#---------------------------
  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    command: ["--character-set-server=utf8mb4",  "--collation-server=utf8mb4_unicode_ci", "--default-authentication-plugin=mysql_native_password"]
    ports:
      - ${DOCKER_APP_DB_PORT}:3306
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - ./docker/data/db:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 30s
      timeout: 10s
      retries: 5
#---------------------------
# phpmyadmin Services
#---------------------------
  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: ${DB_HOST}
      PMA_PORT: ${DB_PORT}
      UPLOAD_LIMIT: 3000000000
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - ${DOCKER_APP_PHPMYADMIN_PORT}:80
    external_links:
      - mysql
    networks:
      - app-network
#---------------------------
#Redis Services
#---------------------------
  redis:
    image: redis:6-alpine
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./docker/data/redis:/data
    restart: unless-stopped
    networks:
      - db-network
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 30s
      timeout: 10s
      retries: 5
#---------------------------
#Docker Networks
#---------------------------
networks:
  app-network:
    driver: bridge
  db-network:
    driver: bridge
